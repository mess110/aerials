// Generated by CoffeeScript 1.11.1
var GameScene, config, engine, gameScene, loadingScene,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

config = Config.get();

config.toggleStats();

config.fillWindow();

config.transparentBackground = true;

engine = new Engine3D();

GameScene = (function(superClass) {
  extend(GameScene, superClass);

  function GameScene() {
    return GameScene.__super__.constructor.apply(this, arguments);
  }

  GameScene.prototype.init = function() {
    var box, dot, dotGeometry, dotMaterial, i, j, len, len1, minAlt, point, postavarul;
    this.common();
    postavarul = SaveObjectManager.get().items['poiana.converted'];
    for (i = 0, len = postavarul.length; i < len; i++) {
      point = postavarul[i];
      if (point.alt < minAlt || (typeof minAlt === "undefined" || minAlt === null)) {
        minAlt = point.alt;
      }
    }
    dotMaterial = new THREE.PointsMaterial({
      size: 2,
      color: 'green'
    });
    dotGeometry = new THREE.Geometry;
    for (j = 0, len1 = postavarul.length; j < len1; j++) {
      point = postavarul[j];
      point.alt -= minAlt;
      dotGeometry.vertices.push(new THREE.Vector3(point.lat, point.alt, point.lon));
    }
    dot = new THREE.Points(dotGeometry, dotMaterial);
    this.scene.add(dot);
    box = new THREE.Box3().setFromObject(dot);
    dot.position.x = -box.max.x / 2;
    return dot.position.z = -box.max.z / 2;
  };

  GameScene.prototype.common = function() {
    engine.camera.position.set(0, 2500, 5000);
    Helper.orbitControls(engine);
    this.scene.add(Helper.ambientLight());
    this.scene.add(Helper.ambientLight());
    return this.scene.add(Helper.ambientLight());
  };

  GameScene.prototype.tick = function(tpf) {};

  GameScene.prototype.doMouseEvent = function(event, raycaster) {};

  GameScene.prototype.doKeyboardEvent = function(event) {};

  return GameScene;

})(BaseScene);

gameScene = new GameScene();

loadingScene = new LoadingScene(['poiana.converted.save.json'], function() {
  return engine.initScene(gameScene);
});

engine.addScene(loadingScene);

engine.initScene(loadingScene);

engine.render();
